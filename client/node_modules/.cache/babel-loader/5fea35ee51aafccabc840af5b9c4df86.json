{"ast":null,"code":"import { categorySlice } from \"./slices/CategorySlice\";\nimport { $host } from \"../http\";\nexport const createCategory = name => async dispatch => {\n  try {\n    dispatch(categorySlice.actions.categoryCreation());\n    await $host.post('api/category', {\n      name\n    }); //authost !\n    dispatch(categorySlice.actions.categoryCreationSuccess());\n  } catch (e) {\n    dispatch(categorySlice.actions.categoryCreationError());\n  }\n};\nexport const setCurrentCategory = category => dispatch => {\n  dispatch(categorySlice.actions.categorySet(category));\n};\nexport const fetchCategories = () => async dispatch => {\n  try {\n    dispatch(categorySlice.actions.categoryCreation());\n    const {\n      data\n    } = await $host.get('api/category');\n    dispatch(categorySlice.actions.categoryCreationSuccess(data));\n  } catch (e) {\n    dispatch(categorySlice.actions.categoryCreationError());\n  }\n};","map":{"version":3,"names":["categorySlice","$host","createCategory","name","dispatch","actions","categoryCreation","post","categoryCreationSuccess","e","categoryCreationError","setCurrentCategory","category","categorySet","fetchCategories","data","get"],"sources":["/home/maximka/Desktop/rashidtema/client/src/store/CategoryActionCreators.ts"],"sourcesContent":["import {AppDispatch} from \"./store\";\nimport {ICategory} from \"../models/DataBaseItems\";\nimport {categorySlice} from \"./slices/CategorySlice\";\nimport {addCategory} from \"../http/itemsAPI\";\nimport {$host} from \"../http\";\n\nexport const createCategory = (name: string) => async(dispatch: AppDispatch) => {\n    try {\n        dispatch(categorySlice.actions.categoryCreation())\n        await $host.post('api/category', {name}) //authost !\n        dispatch(categorySlice.actions.categoryCreationSuccess())\n    } catch (e) {\n        dispatch(categorySlice.actions.categoryCreationError())\n    }\n}\n\nexport const setCurrentCategory = (category: ICategory) => (dispatch: AppDispatch) => {\n    dispatch(categorySlice.actions.categorySet(category))\n}\n\nexport const fetchCategories = () => async(dispatch: AppDispatch) => {\n    try {\n        dispatch(categorySlice.actions.categoryCreation())\n        const {data} = await $host.get('api/category')\n        dispatch(categorySlice.actions.categoryCreationSuccess(data))\n    } catch (e) {\n        dispatch(categorySlice.actions.categoryCreationError())\n    }\n}\n"],"mappings":"AAEA,SAAQA,aAAa,QAAO,wBAAwB;AAEpD,SAAQC,KAAK,QAAO,SAAS;AAE7B,OAAO,MAAMC,cAAc,GAAIC,IAAY,IAAK,MAAMC,QAAqB,IAAK;EAC5E,IAAI;IACAA,QAAQ,CAACJ,aAAa,CAACK,OAAO,CAACC,gBAAgB,EAAE,CAAC;IAClD,MAAML,KAAK,CAACM,IAAI,CAAC,cAAc,EAAE;MAACJ;IAAI,CAAC,CAAC,EAAC;IACzCC,QAAQ,CAACJ,aAAa,CAACK,OAAO,CAACG,uBAAuB,EAAE,CAAC;EAC7D,CAAC,CAAC,OAAOC,CAAC,EAAE;IACRL,QAAQ,CAACJ,aAAa,CAACK,OAAO,CAACK,qBAAqB,EAAE,CAAC;EAC3D;AACJ,CAAC;AAED,OAAO,MAAMC,kBAAkB,GAAIC,QAAmB,IAAMR,QAAqB,IAAK;EAClFA,QAAQ,CAACJ,aAAa,CAACK,OAAO,CAACQ,WAAW,CAACD,QAAQ,CAAC,CAAC;AACzD,CAAC;AAED,OAAO,MAAME,eAAe,GAAG,MAAM,MAAMV,QAAqB,IAAK;EACjE,IAAI;IACAA,QAAQ,CAACJ,aAAa,CAACK,OAAO,CAACC,gBAAgB,EAAE,CAAC;IAClD,MAAM;MAACS;IAAI,CAAC,GAAG,MAAMd,KAAK,CAACe,GAAG,CAAC,cAAc,CAAC;IAC9CZ,QAAQ,CAACJ,aAAa,CAACK,OAAO,CAACG,uBAAuB,CAACO,IAAI,CAAC,CAAC;EACjE,CAAC,CAAC,OAAON,CAAC,EAAE;IACRL,QAAQ,CAACJ,aAAa,CAACK,OAAO,CAACK,qBAAqB,EAAE,CAAC;EAC3D;AACJ,CAAC"},"metadata":{},"sourceType":"module"}