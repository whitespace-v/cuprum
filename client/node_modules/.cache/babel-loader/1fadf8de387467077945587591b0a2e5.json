{"ast":null,"code":"import { subcategorySlice } from \"../slices/SubcategorySlice\";\nimport { $host } from \"../../http\";\nexport const fetchSubcategories = () => async dispatch => {\n  try {\n    dispatch(subcategorySlice.actions.categoryFetching());\n    const {\n      data\n    } = await $host.get('api/category');\n    dispatch(subcategorySlice.actions.categoryFetchingSuccess(data));\n  } catch (e) {\n    dispatch(subcategorySlice.actions.categoryFetchingError());\n  }\n};\nexport const createSubcategory = name => async dispatch => {\n  try {\n    dispatch(subcategorySlice.actions.categoryCreation());\n    await $host.post('api/category', {\n      name\n    }); //authost !\n    dispatch(subcategorySlice.actions.categoryCreationSuccess());\n  } catch (e) {\n    dispatch(subcategorySlice.actions.categoryCreationError());\n  }\n};\nexport const setCurrentSubcategory = category => dispatch => {\n  dispatch(subcategorySlice.actions.subcategorySet(category));\n};","map":{"version":3,"names":["subcategorySlice","$host","fetchSubcategories","dispatch","actions","categoryFetching","data","get","categoryFetchingSuccess","e","categoryFetchingError","createSubcategory","name","categoryCreation","post","categoryCreationSuccess","categoryCreationError","setCurrentSubcategory","category","subcategorySet"],"sources":["/home/maximka/Desktop/rashidtema/client/src/store/ActionCreators/SubcategoryActionCreators.ts"],"sourcesContent":["import {AppDispatch} from \"../store\";\nimport {ICategory} from \"../../models/DataBaseItems\";\nimport {subcategorySlice} from \"../slices/SubcategorySlice\";\nimport {$host} from \"../../http\";\n\nexport const fetchSubcategories = () => async(dispatch: AppDispatch) => {\n    try {\n        dispatch(subcategorySlice.actions.categoryFetching())\n        const {data} = await $host.get('api/category')\n        dispatch(subcategorySlice.actions.categoryFetchingSuccess(data))\n    } catch (e) {\n        dispatch(subcategorySlice.actions.categoryFetchingError())\n    }\n}\n\nexport const createSubcategory = (name: string) => async(dispatch: AppDispatch) => {\n    try {\n        dispatch(subcategorySlice.actions.categoryCreation())\n        await $host.post('api/category', {name}) //authost !\n        dispatch(subcategorySlice.actions.categoryCreationSuccess())\n    } catch (e) {\n        dispatch(subcategorySlice.actions.categoryCreationError())\n    }\n}\n\nexport const setCurrentSubcategory = (category: ICategory) => (dispatch: AppDispatch) => {\n    dispatch(subcategorySlice.actions.subcategorySet(category))\n}\n\n\n"],"mappings":"AAEA,SAAQA,gBAAgB,QAAO,4BAA4B;AAC3D,SAAQC,KAAK,QAAO,YAAY;AAEhC,OAAO,MAAMC,kBAAkB,GAAG,MAAM,MAAMC,QAAqB,IAAK;EACpE,IAAI;IACAA,QAAQ,CAACH,gBAAgB,CAACI,OAAO,CAACC,gBAAgB,EAAE,CAAC;IACrD,MAAM;MAACC;IAAI,CAAC,GAAG,MAAML,KAAK,CAACM,GAAG,CAAC,cAAc,CAAC;IAC9CJ,QAAQ,CAACH,gBAAgB,CAACI,OAAO,CAACI,uBAAuB,CAACF,IAAI,CAAC,CAAC;EACpE,CAAC,CAAC,OAAOG,CAAC,EAAE;IACRN,QAAQ,CAACH,gBAAgB,CAACI,OAAO,CAACM,qBAAqB,EAAE,CAAC;EAC9D;AACJ,CAAC;AAED,OAAO,MAAMC,iBAAiB,GAAIC,IAAY,IAAK,MAAMT,QAAqB,IAAK;EAC/E,IAAI;IACAA,QAAQ,CAACH,gBAAgB,CAACI,OAAO,CAACS,gBAAgB,EAAE,CAAC;IACrD,MAAMZ,KAAK,CAACa,IAAI,CAAC,cAAc,EAAE;MAACF;IAAI,CAAC,CAAC,EAAC;IACzCT,QAAQ,CAACH,gBAAgB,CAACI,OAAO,CAACW,uBAAuB,EAAE,CAAC;EAChE,CAAC,CAAC,OAAON,CAAC,EAAE;IACRN,QAAQ,CAACH,gBAAgB,CAACI,OAAO,CAACY,qBAAqB,EAAE,CAAC;EAC9D;AACJ,CAAC;AAED,OAAO,MAAMC,qBAAqB,GAAIC,QAAmB,IAAMf,QAAqB,IAAK;EACrFA,QAAQ,CAACH,gBAAgB,CAACI,OAAO,CAACe,cAAc,CAACD,QAAQ,CAAC,CAAC;AAC/D,CAAC"},"metadata":{},"sourceType":"module"}