{"ast":null,"code":"import { categorySlice } from \"./slices/CategorySlice\";\nimport { addCategory } from \"../http/itemsAPI\";\nexport const createCategory = name => async dispatch => {\n  try {\n    dispatch(categorySlice.actions.categoryCreation());\n    await addCategory(name);\n    dispatch(categorySlice.actions.categoryCreationSuccess());\n  } catch (e) {\n    dispatch(categorySlice.actions.categoryCreationError());\n  }\n};\nexport const setCurrentCategory = category => dispatch => {\n  dispatch(categorySlice.actions.categorySet(category));\n};\nexport const fetchCategories = () => async dispatch => {\n  try {\n    dispatch(categorySlice.actions.categoryCreation());\n    await addCategory(name);\n    dispatch(categorySlice.actions.categoryCreationSuccess());\n  } catch (e) {\n    dispatch(categorySlice.actions.categoryCreationError());\n  }\n};","map":{"version":3,"names":["categorySlice","addCategory","createCategory","name","dispatch","actions","categoryCreation","categoryCreationSuccess","e","categoryCreationError","setCurrentCategory","category","categorySet","fetchCategories"],"sources":["/home/maximka/Desktop/rashidtema/client/src/store/CategoryActionCreators.ts"],"sourcesContent":["import {AppDispatch} from \"./store\";\nimport {ICategory} from \"../models/DataBaseItems\";\nimport {categorySlice} from \"./slices/CategorySlice\";\nimport {addCategory} from \"../http/itemsAPI\";\n\nexport const createCategory = (name: string) => async(dispatch: AppDispatch) => {\n    try {\n        dispatch(categorySlice.actions.categoryCreation())\n        await addCategory(name)\n        dispatch(categorySlice.actions.categoryCreationSuccess())\n    } catch (e) {\n        dispatch(categorySlice.actions.categoryCreationError())\n    }\n}\n\nexport const setCurrentCategory = (category: ICategory) => (dispatch: AppDispatch) => {\n    dispatch(categorySlice.actions.categorySet(category))\n}\n\nexport const fetchCategories = () => async(dispatch: AppDispatch) => {\n    try {\n        dispatch(categorySlice.actions.categoryCreation())\n        await addCategory(name)\n        dispatch(categorySlice.actions.categoryCreationSuccess())\n    } catch (e) {\n        dispatch(categorySlice.actions.categoryCreationError())\n    }\n}\n"],"mappings":"AAEA,SAAQA,aAAa,QAAO,wBAAwB;AACpD,SAAQC,WAAW,QAAO,kBAAkB;AAE5C,OAAO,MAAMC,cAAc,GAAIC,IAAY,IAAK,MAAMC,QAAqB,IAAK;EAC5E,IAAI;IACAA,QAAQ,CAACJ,aAAa,CAACK,OAAO,CAACC,gBAAgB,EAAE,CAAC;IAClD,MAAML,WAAW,CAACE,IAAI,CAAC;IACvBC,QAAQ,CAACJ,aAAa,CAACK,OAAO,CAACE,uBAAuB,EAAE,CAAC;EAC7D,CAAC,CAAC,OAAOC,CAAC,EAAE;IACRJ,QAAQ,CAACJ,aAAa,CAACK,OAAO,CAACI,qBAAqB,EAAE,CAAC;EAC3D;AACJ,CAAC;AAED,OAAO,MAAMC,kBAAkB,GAAIC,QAAmB,IAAMP,QAAqB,IAAK;EAClFA,QAAQ,CAACJ,aAAa,CAACK,OAAO,CAACO,WAAW,CAACD,QAAQ,CAAC,CAAC;AACzD,CAAC;AAED,OAAO,MAAME,eAAe,GAAG,MAAM,MAAMT,QAAqB,IAAK;EACjE,IAAI;IACAA,QAAQ,CAACJ,aAAa,CAACK,OAAO,CAACC,gBAAgB,EAAE,CAAC;IAClD,MAAML,WAAW,CAACE,IAAI,CAAC;IACvBC,QAAQ,CAACJ,aAAa,CAACK,OAAO,CAACE,uBAAuB,EAAE,CAAC;EAC7D,CAAC,CAAC,OAAOC,CAAC,EAAE;IACRJ,QAAQ,CAACJ,aAAa,CAACK,OAAO,CAACI,qBAAqB,EAAE,CAAC;EAC3D;AACJ,CAAC"},"metadata":{},"sourceType":"module"}